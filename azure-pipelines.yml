trigger:
- master

variables:
  backendServiceArm: 'Visual Studio Enterprise(17b12858-3960-4e6f-a663-a06fdae23428)'
  backendAzureRmResourceGroupName: 'resourcegroup-tfstate'
  backendAzureRmStorageAccountName: 'terraformtfstateskip'
  backendAzureRmContainerName: 'tfstate'
  location: 'westeurope'

stages:
- template: create-terraform-backend-template.yml

- template: terraform-stages-template.yml
  parameters:
    environment: stage
    environmentDisplayName: Staging
    backendAzureRmKey: 'staging.tfstate'

- template: terraform-stages-template.yml
  parameters:
    environment: qa
    environmentDisplayName: QA
    backendAzureRmKey: 'qa.tfstate'

# steps:
#   - 
# - task: AzureCLI@2
#   inputs:
#     azureSubscription: 'Visual Studio Enterprise(17b12858-3960-4e6f-a663-a06fdae23428)'
#     scriptType: 'bash'
#     scriptLocation: 'inlineScript'
#     inlineScript: |
#       # Create the resource group
#       az group create -n $RESOURCE_GROUP_NAME -l $LOCATION
       
#       echo "Resource group $RESOURCE_GROUP_NAME created."
       
#       # Create the storage account
#       az storage account create -g $RESOURCE_GROUP_NAME -l $LOCATION \
#         --name $TF_STATE_STORAGE_ACCOUNT_NAME \
#         --sku Standard_LRS \
#         --encryption-services blob
       
#       echo "Storage account $TF_STATE_STORAGE_ACCOUNT_NAME created."
       
#       # Retrieve the storage account key
#       ACCOUNT_KEY=$(az storage account keys list --resource-group $RESOURCE_GROUP_NAME --account-name $TF_STATE_STORAGE_ACCOUNT_NAME --query [0].value -o tsv)
       
#       echo "Storage account key retrieved."
       
#       # Create a storage container (for the Terraform State)
#       az storage container create --name $TF_STATE_CONTAINER_NAME --account-name $TF_STATE_STORAGE_ACCOUNT_NAME --account-key $ACCOUNT_KEY
       
#       echo "Storage container $TF_STATE_CONTAINER_NAME created."




